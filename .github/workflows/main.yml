name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: michaelsigamani
          POSTGRES_PASSWORD: policy
          POSTGRES_DB: maiven
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U mich aelsigamani"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Lint with Flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: Check code formatting with Black
        uses: psf/black@stable
        with:
          black_args: ". --check --diff"

      - name: Wait for PostgreSQL to be healthy
        run: |
          echo "Waiting for Postgres to become healthy..."
          for i in {1..15}; do
            pg_isready -h localhost -p 5432 -U "michaelsigamani" && break
            echo "Still waiting... ($i/15)"
            sleep 5
          done

      - name: Run unit tests
        run: pytest -q

      - name: Save CSV data to SQLite DB
        run: |
          python main.py load \
            --csv-dir data \
            --db-path data/maiven.db

      - name: Query Active Policies
        run: |
          python main.py query \
            --db-path data/maiven.db \
            --active-policies

      - name: Query Number of Jurisdictions
        run: |
          python main.py query \
            --db-path data/maiven.db \
            "SELECT COUNT(DISTINCT geography) AS num_jurisdictions FROM policy;"
